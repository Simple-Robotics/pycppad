name: PyCppAD CI for MacOS/Linux

on:
  pull_request:
  push:

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally
    # well on Windows or Mac.  You can convert this to a matrix build if you need
    # cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os: ["ubuntu-latest", "macos-latest"]

    steps:
    - uses: actions/checkout@v4
      with:
        submodules: recursive

    - uses: conda-incubator/setup-miniconda@v3
      with:
        activate-environment: pycppad
        auto-update-conda: true
        environment-file: .github/workflows/conda/conda-env.yml
        python-version: 3.8
        auto-activate-base: false

    - name: Build PyCppAD
      shell: bash -el {0}
      run: |
        conda list
        echo $CONDA_PREFIX
        
        mkdir build
        cd build

        cmake .. \
          -G "Ninja" \
          -DCMAKE_INSTALL_PREFIX=$CONDA_PREFIX \
          -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} \
          -DPYTHON_EXECUTABLE=$(which python3) \
          -DBUILD_WITH_CPPAD_CODEGEN_BINDINGS=ON
        ninja -j1
        ctest --output-on-failure -C Release -V
        ninja install

    - name: Uninstall PyCppAD
      shell: bash -el {0}
      run: |
        cd build
        ninja uninstall
