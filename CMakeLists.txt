#
# Copyright (c) 2021 INRIA
#

CMAKE_MINIMUM_REQUIRED(VERSION 3.1)

SET(PROJECT_NAME pycppad)
SET(PROJECT_DESCRIPTION "Python bindings for CppAD using Boost.Python")
SET(PROJECT_URL "https://gitlab.inria.fr/rbudhira/pycppad")

# Project options
OPTION(SUFFIX_SO_VERSION "Suffix library name with its version" ON)

# Project configuration
SET(PROJECT_USE_CMAKE_EXPORT TRUE)
SET(CMAKE_VERBOSE_MAKEFILE TRUE)
# SET(CXX_DISABLE_WERROR FALSE)

# Check if the submodule cmake have been initialized
IF(NOT EXISTS "${CMAKE_SOURCE_DIR}/cmake/base.cmake")
  MESSAGE(FATAL_ERROR "\nPlease run the following command first:\ngit submodule update --init\n")
ENDIF()

INCLUDE(cmake/base.cmake)
INCLUDE(cmake/boost.cmake)
INCLUDE(cmake/python.cmake)

# Project definition
COMPUTE_PROJECT_ARGS(PROJECT_ARGS LANGUAGES CXX)
PROJECT(${PROJECT_NAME} ${PROJECT_ARGS})
CHECK_MINIMAL_CXX_STANDARD(14 ENFORCE)


FINDPYTHON()
FIND_NUMPY()

FIND_PACKAGE(Boost REQUIRED)
SEARCH_FOR_BOOST_PYTHON(REQUIRED)
SET_BOOST_DEFAULT_OPTIONS()
EXPORT_BOOST_DEFAULT_OPTIONS()

SET(${PROJECT_NAME}_HEADERS
  include/${PROJECT_NAME}/fwd.hpp
  include/${PROJECT_NAME}/user-type.hpp
  include/${PROJECT_NAME}/numpy-type.hpp
  include/${PROJECT_NAME}/register.hpp
  include/${PROJECT_NAME}/scalar-conversion.hpp
  )

SET(${PROJECT_NAME}_SOURCES
  src/register.cpp
  )

ADD_LIBRARY(${PROJECT_NAME} SHARED ${${PROJECT_NAME}_SOURCES} ${${PROJECT_NAME}_HEADERS})

IF(SUFFIX_SO_VERSION)
  SET_TARGET_PROPERTIES(${PROJECT_NAME} PROPERTIES SOVERSION ${PROJECT_VERSION})
ENDIF(SUFFIX_SO_VERSION)

TARGET_LINK_BOOST_PYTHON(${PROJECT_NAME} PUBLIC)

TARGET_INCLUDE_DIRECTORIES(${PROJECT_NAME} 
  SYSTEM PUBLIC 
  ${Boost_INCLUDE_DIRS} 
  ${PYTHON_INCLUDE_DIRS} 
  ${NUMPY_INCLUDE_DIRS}
  $<INSTALL_INTERFACE:include>)
TARGET_INCLUDE_DIRECTORIES(${PROJECT_NAME} PUBLIC $<INSTALL_INTERFACE:include>)

INSTALL(TARGETS ${PROJECT_NAME}
  EXPORT ${TARGETS_EXPORT_NAME}
  PUBLIC_HEADER DESTINATION ${CMAKE_INSTALL_FULL_INCLUDEDIR}
  INCLUDES DESTINATION ${CMAKE_INSTALL_FULL_INCLUDEDIR}
  LIBRARY DESTINATION ${CMAKE_INSTALL_FULL_LIBDIR}
  ARCHIVE DESTINATION ${CMAKE_INSTALL_FULL_LIBDIR}
  RUNTIME DESTINATION ${CMAKE_INSTALL_FULL_BINDIR})
